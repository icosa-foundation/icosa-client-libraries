# coding: utf-8

"""
    NinjaAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.asset_schema import AssetSchema

class TestAssetSchema(unittest.TestCase):
    """AssetSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AssetSchema:
        """Test AssetSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AssetSchema`
        """
        model = AssetSchema()
        if include_optional:
            return AssetSchema(
                author_id = '',
                author_name = '',
                name = '',
                description = '',
                create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                url = '',
                asset_id = '',
                formats = [
                    openapi_client.models.asset_format.AssetFormat(
                        root = openapi_client.models.asset_resource.AssetResource(
                            relative_path = '', 
                            content_type = '', 
                            url = '', ), 
                        resources = [
                            openapi_client.models.asset_resource.AssetResource(
                                relative_path = '', 
                                content_type = '', 
                                url = '', )
                            ], 
                        format_complexity = openapi_client.models.format_complexity.FormatComplexity(
                            triangle_count = 56, 
                            lod_hint = 56, ), 
                        format_type = '', 
                        zip_archive_url = '', 
                        role = '', )
                    ],
                display_name = '',
                visibility = '',
                tags = [
                    ''
                    ],
                is_curated = True,
                thumbnail = openapi_client.models.thumbnail.Thumbnail(
                    relative_path = '', 
                    content_type = '', 
                    url = '', ),
                triangle_count = 56,
                presentation_params = None,
                license = '',
                license_version = ''
            )
        else:
            return AssetSchema(
                author_name = '',
                name = '',
                description = '',
                create_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                url = '',
                asset_id = '',
                formats = [
                    openapi_client.models.asset_format.AssetFormat(
                        root = openapi_client.models.asset_resource.AssetResource(
                            relative_path = '', 
                            content_type = '', 
                            url = '', ), 
                        resources = [
                            openapi_client.models.asset_resource.AssetResource(
                                relative_path = '', 
                                content_type = '', 
                                url = '', )
                            ], 
                        format_complexity = openapi_client.models.format_complexity.FormatComplexity(
                            triangle_count = 56, 
                            lod_hint = 56, ), 
                        format_type = '', 
                        zip_archive_url = '', 
                        role = '', )
                    ],
                display_name = '',
                visibility = '',
                thumbnail = openapi_client.models.thumbnail.Thumbnail(
                    relative_path = '', 
                    content_type = '', 
                    url = '', ),
                triangle_count = 56,
                license = '',
                license_version = '',
        )
        """

    def testAssetSchema(self):
        """Test AssetSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
