# coding: utf-8

"""
    NinjaAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.asset_format import AssetFormat

class TestAssetFormat(unittest.TestCase):
    """AssetFormat unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AssetFormat:
        """Test AssetFormat
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AssetFormat`
        """
        model = AssetFormat()
        if include_optional:
            return AssetFormat(
                root = openapi_client.models.asset_resource.AssetResource(
                    relative_path = '', 
                    content_type = '', 
                    url = '', ),
                resources = [
                    openapi_client.models.asset_resource.AssetResource(
                        relative_path = '', 
                        content_type = '', 
                        url = '', )
                    ],
                format_complexity = openapi_client.models.format_complexity.FormatComplexity(
                    triangle_count = 56, 
                    lod_hint = 56, ),
                format_type = '',
                zip_archive_url = '',
                role = ''
            )
        else:
            return AssetFormat(
                format_complexity = openapi_client.models.format_complexity.FormatComplexity(
                    triangle_count = 56, 
                    lod_hint = 56, ),
        )
        """

    def testAssetFormat(self):
        """Test AssetFormat"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
